version: "3.8"

services:
  localstack:
    container_name: localstack
    image: localstack/localstack:1.3.0
    ports:
      - "127.0.0.1:5001:5001"
    volumes:
      - "./docker/uid2-core/src/init-aws.sh:/etc/localstack/init/ready.d/init-aws-core.sh"
      - "./docker/uid2-core/src/s3/core:/s3/core"
      - "./docker/uid2-core/src/kms/seed.yaml:/init/seed.yaml"
      - "./docker/uid2-optout/src/init-aws.sh:/etc/localstack/init/ready.d/init-aws-optout.sh"
      - "./docker/uid2-optout/src/s3/optout:/s3/optout"
    environment:
      - EDGE_PORT=5001
      - KMS_PROVIDER=local-kms
    healthcheck:
      test: awslocal s3api wait bucket-exists --bucket test-core-bucket
        && awslocal s3api wait bucket-exists --bucket test-optout-bucket
      interval: 5s
      timeout: 5s
      retries: 3
    networks:
      - e2e_default

  core:
    container_name: core
    image: ghcr.io/iabtechlab/uid2-core:latest
    ports:
      - "127.0.0.1:8088:8088"
      - "127.0.0.1:9088:9088"
      - "127.0.0.1:5088:5005"
    volumes:
      - ./docker/uid2-core/conf/default-config.json:/app/conf/default-config.json
      - ./docker/uid2-core/conf/local-e2e-docker-config.json:/app/conf/local-config.json
    environment:
      LOGBACK_CONF: ./conf/logback.loki-e2e.xml
    depends_on:
      localstack:
        condition: service_healthy
    healthcheck:
      test: wget --tries=1 --spider http://localhost:8088/ops/healthcheck || exit 1
      interval: 10s
    networks:
      - e2e_default

  optout:
    container_name: optout
    image: ghcr.io/iabtechlab/uid2-optout:latest
    ports:
      - "127.0.0.1:8090:8081"
      - "127.0.0.1:5090:5005"
    volumes:
      - ./docker/uid2-optout/conf/default-config.json:/app/conf/default-config.json
      - ./docker/uid2-optout/conf/local-e2e-docker-config.json:/app/conf/local-config.json
      - ./docker/uid2-optout/mount/:/opt/uid2/optout/
    depends_on:
      core:
        condition: service_healthy
    healthcheck:
      test: wget --tries=1 --spider http://localhost:8081/ops/healthcheck || exit 1
      interval: 5s
    networks:
      - e2e_default

  publicoperator:
    container_name: public_operator
    image: ghcr.io/iabtechlab/uid2-operator:latest
    profiles:
      - public
    ports:
      - "127.0.0.1:8080:8080"
      - "127.0.0.1:9080:9080"
      - "127.0.0.1:5080:5005"
    volumes:
      - ./docker/uid2-operator/conf/default-config.json:/app/conf/default-config.json
      - ./docker/uid2-operator/conf/local-e2e-docker-config.json:/app/conf/local-config.json
    depends_on:
      core:
        condition: service_healthy
      optout:
        condition: service_healthy
    healthcheck:
      test: wget --tries=1 --spider http://localhost:8080/ops/healthcheck || exit 1
      interval: 5s
    networks:
      - e2e_default

  alertmanager:
    image: prom/alertmanager
    container_name: alertmanager
    command:
      - "--config.file=/etc/alertmanager/config.yml"
      - "--storage.path=/alertmanager"
    volumes:
      - ./docker/alertmanager/conf/alertmanager.yml:/etc/alertmanager/config.yml
      - alertmanager-data:/data
    ports:
      - "9093:9093"
    healthcheck:
      test: [ "CMD", "wget", "--spider", "http://localhost:9093/-/ready" ]
      interval: 5s
    networks:
      - e2e_default

  loki:
    image: grafana/loki:main
    container_name: loki
    volumes:
      - ./docker/loki/conf/loki.yml:/etc/config/loki.yml
      - ./docker/loki/conf/rules.yml:/etc/loki/rules/fake/rules.yml
    entrypoint:
      - /usr/bin/loki
      - -config.file=/etc/config/loki.yml
    ports:
      - "3100:3100"
    healthcheck:
      test: [ "CMD", "wget", "--spider", "http://localhost:3100/ready" ]
      interval: 15s
    depends_on:
      alertmanager:
        condition: service_healthy
    networks:
      - e2e_default

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    command: --web.enable-lifecycle --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./docker/prometheus/conf:/etc/prometheus
      - prometheus-data:/prometheus
    ports:
      - "9090:9090"
    healthcheck:
      test: [ "CMD", "wget", "--spider", "http://localhost:9090/-/ready" ]
      interval: 5s
    networks:
      - e2e_default

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    volumes:
      - ./docker/grafana/conf/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
      - grafana-data:/var/lib/grafana
    ports:
      - "3000:3000"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:3000/api/health" ]
      interval: 5s
    depends_on:
      loki:
        condition: service_healthy
      prometheus:
        condition: service_healthy
    networks:
      - e2e_default

volumes:
  alertmanager-data: {}
  grafana-data: {}
  prometheus-data: {}

networks:
  e2e_default:
    external: true
    driver: bridge
